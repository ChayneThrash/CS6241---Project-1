digraph "CFG for 'main' function" {
	label="CFG for 'main' function";

	Node0x7ae6770 [shape=record,label="{entry:\l  %retval = alloca i32, align 4\l  %w = alloca i32, align 4\l  %y = alloca i32, align 4\l  %x = alloca i32, align 4\l  %z = alloca i32, align 4\l  %v = alloca i32, align 4\l  store i32 0, i32* %retval, align 4\l  br label %b1\l}"];
	Node0x7ae6770 -> Node0x7ae67c0;
	Node0x7ae67c0 [shape=record,label="{b1:                                               \l  store i32 1, i32* %w, align 4\l  br label %b2\l}"];
	Node0x7ae67c0 -> Node0x7ae6810;
	Node0x7ae6810 [shape=record,label="{b2:                                               \l  store i32 2, i32* %y, align 4\l  %0 = load i32, i32* %v, align 4\l  %1 = load i32, i32* %x, align 4\l  %call = call i32 (i8*, ...) bitcast (i32 (...)* @time to i32 (i8*,\l... ...)*)(i8* null)\l  call void @srand(i32 %call) #3\l  %call1 = call i32 @rand() #3\l  %rem = srem i32 %call1, 11\l  %cmp = icmp sgt i32 %rem, 5\l  br i1 %cmp, label %if.then, label %if.else\l|{<s0>T|<s1>F}}"];
	Node0x7ae6810:s0 -> Node0x7ae6860;
	Node0x7ae6810:s1 -> Node0x7ae68b0;
	Node0x7ae6860 [shape=record,label="{if.then:                                          \l  br label %b3\l}"];
	Node0x7ae6860 -> Node0x7ae6900;
	Node0x7ae68b0 [shape=record,label="{if.else:                                          \l  br label %b5\l}"];
	Node0x7ae68b0 -> Node0x7ae4dd0;
	Node0x7ae6900 [shape=record,label="{b3:                                               \l  store i32 5, i32* %v, align 4\l  br label %b4\l}"];
	Node0x7ae6900 -> Node0x7ae4d80;
	Node0x7ae4d80 [shape=record,label="{b4:                                               \l  %2 = load i32, i32* %y, align 4\l  %add = add nsw i32 %2, 1\l  store i32 %add, i32* %x, align 4\l  br label %b5\l}"];
	Node0x7ae4d80 -> Node0x7ae4dd0;
	Node0x7ae4dd0 [shape=record,label="{b5:                                               \l  br label %b6\l}"];
	Node0x7ae4dd0 -> Node0x7ae4e20;
	Node0x7ae4e20 [shape=record,label="{b6:                                               \l  %call2 = call i32 @rand() #3\l  %rem3 = srem i32 %call2, 5\l  %cmp4 = icmp sgt i32 %rem3, 2\l  br i1 %cmp4, label %if.then5, label %if.else6\l|{<s0>T|<s1>F}}"];
	Node0x7ae4e20:s0 -> Node0x7ae4e70;
	Node0x7ae4e20:s1 -> Node0x7ae4ec0;
	Node0x7ae4e70 [shape=record,label="{if.then5:                                         \l  br label %b7\l}"];
	Node0x7ae4e70 -> Node0x7ae4f10;
	Node0x7ae4ec0 [shape=record,label="{if.else6:                                         \l  br label %b14\l}"];
	Node0x7ae4ec0 -> Node0x7ae53d0;
	Node0x7ae4f10 [shape=record,label="{b7:                                               \l  %3 = load i32, i32* %v, align 4\l  %cmp7 = icmp eq i32 %3, 5\l  br i1 %cmp7, label %if.then8, label %if.else9\l|{<s0>T|<s1>F}}"];
	Node0x7ae4f10:s0 -> Node0x7ae50b0;
	Node0x7ae4f10:s1 -> Node0x7ae5100;
	Node0x7ae50b0 [shape=record,label="{if.then8:                                         \l  br label %end\l}"];
	Node0x7ae50b0 -> Node0x7ae5420;
	Node0x7ae5100 [shape=record,label="{if.else9:                                         \l  br label %b8\l}"];
	Node0x7ae5100 -> Node0x7ae5150;
	Node0x7ae5150 [shape=record,label="{b8:                                               \l  %4 = load i32, i32* %x, align 4\l  call void @srand(i32 %4) #3\l  br label %b9\l}"];
	Node0x7ae5150 -> Node0x7ae51a0;
	Node0x7ae51a0 [shape=record,label="{b9:                                               \l  %5 = load i32, i32* %w, align 4\l  store i32 %5, i32* %v, align 4\l  br label %b10\l}"];
	Node0x7ae51a0 -> Node0x7ae51f0;
	Node0x7ae51f0 [shape=record,label="{b10:                                              \l  %6 = load i32, i32* %v, align 4\l  %cmp10 = icmp sgt i32 %6, 0\l  br i1 %cmp10, label %if.then11, label %if.else12\l|{<s0>T|<s1>F}}"];
	Node0x7ae51f0:s0 -> Node0x7ae5240;
	Node0x7ae51f0:s1 -> Node0x7ae5290;
	Node0x7ae5240 [shape=record,label="{if.then11:                                        \l  br label %b11\l}"];
	Node0x7ae5240 -> Node0x7ae52e0;
	Node0x7ae5290 [shape=record,label="{if.else12:                                        \l  br label %b12\l}"];
	Node0x7ae5290 -> Node0x7ae5330;
	Node0x7ae52e0 [shape=record,label="{b11:                                              \l  %7 = load i32, i32* %w, align 4\l  call void @srand(i32 %7) #3\l  br label %b13\l}"];
	Node0x7ae52e0 -> Node0x7ae5380;
	Node0x7ae5330 [shape=record,label="{b12:                                              \l  %8 = load i32, i32* %x, align 4\l  %9 = load i32, i32* %y, align 4\l  %add13 = add nsw i32 %8, %9\l  store i32 %add13, i32* %z, align 4\l  br label %end\l}"];
	Node0x7ae5330 -> Node0x7ae5420;
	Node0x7ae5380 [shape=record,label="{b13:                                              \l  %10 = load i32, i32* %w, align 4\l  %mul = mul nsw i32 2, %10\l  store i32 %mul, i32* %x, align 4\l  br label %b6\l}"];
	Node0x7ae5380 -> Node0x7ae4e20;
	Node0x7ae53d0 [shape=record,label="{b14:                                              \l  %11 = load i32, i32* %w, align 4\l  %add14 = add nsw i32 %11, 1\l  store i32 %add14, i32* %y, align 4\l  br label %b10\l}"];
	Node0x7ae53d0 -> Node0x7ae51f0;
	Node0x7ae5420 [shape=record,label="{end:                                              \l  %call15 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8],\l... [4 x i8]* @.str, i32 0, i32 0))\l  %12 = load i32, i32* %retval, align 4\l  ret i32 %12\l}"];
}
